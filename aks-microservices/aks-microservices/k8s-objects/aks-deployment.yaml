apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-deployment-service1
  labels:
    app: aks-services1
spec:
  replicas: 2
  selector: # selector - the workloads the deployment will manage
    matchLabels: # Match all pods with the defined labels
      app: aks-services1 # Labels follow the `name: value` template
  template: # This is the template of the pod inside the deployment
    metadata: # Metadata for the pod
      name: aks-services1
      labels:
        app: aks-services1
    spec:
      containers: # Here we define all containers
      - name: aks-services1
        image: rajeshctadha/aks-service1:latest
        imagePullPolicy: IfNotPresent
        ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
        # livenessProbe:
        #     httpGet:
        #       port: 80
        #       path: /liveness
        #     initialDelaySeconds: 10
        #     periodSeconds: 15
        # readinessProbe:
        #     httpGet:
        #       port: 80
        #       path: /hc
        #     initialDelaySeconds: 90
        #     periodSeconds: 60
        #     timeoutSeconds: 5
        resources:
            requests: # Minimum amount of resources requested
              cpu: 100m
              memory: 128Mi
            limits: # Maximum amount of resources requested
              cpu: 250m
              memory: 256Mi
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: service1-lb
spec:
  type: LoadBalancer
  selector: # pod selector with below labels
    app: aks-services1
  ports:
    - port: 80 # SERVICE exposed port
      name: http

---

apiVersion: v1
kind: Service
metadata:
  name: aks-cluster-service
spec:
  type: ClusterIP
  selector: # pod selector with below labels
    app: aks
  ports:
    - port: 80 # SERVICE exposed port
      name: http